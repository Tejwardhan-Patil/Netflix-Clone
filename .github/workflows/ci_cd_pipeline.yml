name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to build and test backend services
  build-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [UserService, VideoService, RecommendationService, AnalyticsService, TranscodingService]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11 for Kotlin/Java services
        if: matrix.service == 'UserService' || matrix.service == 'VideoService' || matrix.service == 'Gateway'
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Set up Python for RecommendationService
        if: matrix.service == 'RecommendationService'
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up Scala for AnalyticsService
        if: matrix.service == 'AnalyticsService'
        uses: olafurpg/setup-scala@v12

      - name: Set up Go for TranscodingService and VideoQueryService
        if: matrix.service == 'TranscodingService' || matrix.service == 'VideoQueryService'
        uses: actions/setup-go@v2
        with:
          go-version: '1.19'

      - name: Build and Test Service
        run: |
          cd ${{ matrix.service }}
          if [[ -f "gradlew" ]]; then
            ./gradlew build
          elif [[ -f "requirements.txt" ]]; then
            pip install -r requirements.txt
            pytest
          elif [[ -f "build.sbt" ]]; then
            sbt test
          elif [[ -f "go.mod" ]]; then
            go test ./...
          fi

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        run: |
          docker build -t website/${{ matrix.service }}:latest .

  # Job to build and test the frontend
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        working-directory: ./ReactFrontend

      - name: Run tests
        run: npm test
        working-directory: ./ReactFrontend

      - name: Build frontend
        run: npm run build
        working-directory: ./ReactFrontend

  # Job to deploy services
  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Backend and Frontend Services
        run: |
          bash ./scripts/deploy.sh